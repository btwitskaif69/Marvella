generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}

enum Role {
  ADMIN
  CUSTOMER
}

model User {
  id           String  @id @default(cuid())
  name         String?
  email        String  @unique
  passwordHash String?
  role         String  @default("CUSTOMER")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Collection {
  id          String    @id @default(cuid())
  name        String
  slug        String    @unique
  description String?
  imageUrl    String?
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Product {
  id            String         @id @default(cuid())
  name          String
  slug          String         @unique
  description   String?
  finish        String?
  basePrice     Decimal        @db.Decimal(10, 2)
  images        ProductImage[]
  shades        Shade[]
  collection    Collection?    @relation(fields: [collectionId], references: [id], onDelete: SetNull)
  collectionId  String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  @@index([name])
  @@index([collectionId])
}

model ProductImage {
  id        String   @id @default(cuid())
  url       String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  createdAt DateTime @default(now())
}

model Shade {
  id         String    @id @default(cuid())
  name       String
  hexColor   String
  sku        String?   @unique
  price      Decimal?  @db.Decimal(10, 2)
  product    Product   @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId  String
  inventory  Inventory?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@index([productId])
}

model Inventory {
  id        String   @id @default(cuid())
  quantity  Int      @default(0)
  shade     Shade    @relation(fields: [shadeId], references: [id], onDelete: Cascade)
  shadeId   String   @unique
  updatedAt DateTime @updatedAt
}
